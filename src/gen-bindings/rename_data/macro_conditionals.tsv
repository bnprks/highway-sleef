# This provides translations of (full) macro conditional expressions,
# marking them as either always true (1), always false (0), or with a provided translation


# DETERMINISTIC affects whether trig operations will always return the same value
# regardless of the presence of high-absolute-value entries in the same SIMD vector. 
# This means we will take a speed hit by performing both the fast path and the slow path.
!defined(DETERMINISTIC)	0

# The only reason to disable FMA would be for bitwise reproducibility on platforms without FMA ops.
# (Unless some algorithms rely on recognizing a lack of FMA ops available)
ENABLE_FMA_SP	HWY_SLEEF_HAS_FMA
ENABLE_FMA_DP	HWY_SLEEF_HAS_FMA

# Appears to be false for Neon32 and RVV. "grep -L "#define FULL_FP_ROUNDING" sleef/src/arch/helper*"
# For now I'll mark as always true, assuming Highway might handle rounding consistently on outlier platforms.
FULL_FP_ROUNDING	1 

defined(ENABLE_AVX512F) || defined(ENABLE_AVX512FNOFMA)	HWY_ARCH_X86 && HWY_TARGET <= HWY_AVX3
!defined(ENABLE_AVX512F) && !defined(ENABLE_AVX512FNOFMA)	!(HWY_ARCH_X86 && HWY_TARGET <= HWY_AVX3)
#defined(ENABLE_AVX512F) || defined(ENABLE_AVX512FNOFMA)	0
#!defined(ENABLE_AVX512F) && !defined(ENABLE_AVX512FNOFMA)	1
defined(ENABLE_NEON32) || defined(ENABLE_NEON32VFPV4)	HWY_ARCH_ARM && HWY_TARGET >= HWY_NEON
defined(ENABLE_NEON32)	HWY_ARCH_ARM && HWY_TARGET >= HWY_NEON

# Highway doesn't have a backend using compiler-defined vector extensions
defined(ENABLE_VECEXT)	0

# Sleef has some special recipricol sqrt logic for NEON specifically, but we'll ignore that for now
ENABLE_RECSQRT_SP	0

# Basic helpers for #if 1 and #if 0
0	0 
1	1 

defined(_MSC_VER)	defined(_MSC_VER)
!defined(_MSC_VER)	!defined(_MSC_VER)

# Avoid having this builtin marked as an unknown variable during translation
UINT64_C	UINT64_C